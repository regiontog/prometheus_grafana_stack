version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  monitor-net:
    driver: overlay
    name: inbound
  traefik:
    external: true

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitor-net     
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.frontend.rule=Host:prometheus.localhost"
        - "traefik.backend=prometheus"
        - "traefik.port=9090"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitor-net
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.frontend.rule=Host:grafana.localhost"
        - "traefik.backend=grafana"
        - "traefik.port=3000"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure